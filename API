Contents:
 - API reference (lame module)
 - API reference (mp3 object)
 - API description

API reference (lame module):
  <type 'int'>	lame.ASM_3DNOW
  <type 'int'>	lame.ASM_MMX
  <type 'int'>	lame.ASM_SSE
  <type 'int'>	lame.DUAL
  <type 'int'>	lame.JOINT_STEREO
  <type 'int'>	lame.MONO
  <type 'int'>	lame.PAD_ADJUST
  <type 'int'>	lame.PAD_ALL
  <type 'int'>	lame.PAD_NO
  <type 'int'>	lame.PRESET_EXTREME
  <type 'int'>	lame.PRESET_EXTREME_FAST
  <type 'int'>	lame.PRESET_INSANE
  <type 'int'>	lame.PRESET_MEDIUM
  <type 'int'>	lame.PRESET_MEDIUM_FAST
  <type 'int'>	lame.PRESET_R3MIX
  <type 'int'>	lame.PRESET_STANDARD
  <type 'int'>	lame.PRESET_STANDARD_FAST
  <type 'int'>	lame.STEREO
  <type 'int'>	lame.VBR_ABR
  <type 'int'>	lame.VBR_DEFAULT
  <type 'int'>	lame.VBR_NEW
  <type 'int'>	lame.VBR_OFF
  <type 'int'>	lame.VBR_OLD
  <type 'str'>	lame.__doc__
  <type 'str'>	lame.__file__
  <type 'str'>	lame.__name__
  <type 'str'>	lame.error
  <type 'builtin_function_or_method'>	lame.init
  <type 'builtin_function_or_method'>	lame.url
  <type 'builtin_function_or_method'>	lame.version

API reference (mp3 object):
  <type 'builtin_function_or_method'>	mp3.delete
  <type 'builtin_function_or_method'>	mp3.encode
  <type 'builtin_function_or_method'>	mp3.encode_interleaved
  <type 'builtin_function_or_method'>	mp3.flush_buffers
  <type 'builtin_function_or_method'>	mp3.get_bitrate_histogram
  <type 'builtin_function_or_method'>	mp3.get_bitrate_stereo_mode_histogram
  <type 'builtin_function_or_method'>	mp3.get_bitrate_values
  <type 'builtin_function_or_method'>	mp3.get_frame_num
  <type 'builtin_function_or_method'>	mp3.get_stereo_mode_histogram
  <type 'builtin_function_or_method'>	mp3.get_total_frames
  <type 'builtin_function_or_method'>	mp3.init_parameters
  <type 'builtin_function_or_method'>	mp3.set_abr_bitrate
  <type 'builtin_function_or_method'>	mp3.set_allow_blocktype_difference
  <type 'builtin_function_or_method'>	mp3.set_analysis
  <type 'builtin_function_or_method'>	mp3.set_asm_optimizations
  <type 'builtin_function_or_method'>	mp3.set_ath_disable
  <type 'builtin_function_or_method'>	mp3.set_ath_for_masking_only
  <type 'builtin_function_or_method'>	mp3.set_ath_for_short_only
  <type 'builtin_function_or_method'>	mp3.set_ath_lower
  <type 'builtin_function_or_method'>	mp3.set_ath_type
  <type 'builtin_function_or_method'>	mp3.set_athaa_loudness_approximation
  <type 'builtin_function_or_method'>	mp3.set_athaa_sensitivity
  <type 'builtin_function_or_method'>	mp3.set_athaa_type
  <type 'builtin_function_or_method'>	mp3.set_bitrate
  <type 'builtin_function_or_method'>	mp3.set_compression_ratio
  <type 'builtin_function_or_method'>	mp3.set_copyright
  <type 'builtin_function_or_method'>	mp3.set_disable_reservoir
  <type 'builtin_function_or_method'>	mp3.set_error_protection
  <type 'builtin_function_or_method'>	mp3.set_exp_msfix
  <type 'builtin_function_or_method'>	mp3.set_exp_nspsytune
  <type 'builtin_function_or_method'>	mp3.set_exp_preset_expopts
  <type 'builtin_function_or_method'>	mp3.set_exp_quantization
  <type 'builtin_function_or_method'>	mp3.set_exp_y
  <type 'builtin_function_or_method'>	mp3.set_exp_z
  <type 'builtin_function_or_method'>	mp3.set_extension
  <type 'builtin_function_or_method'>	mp3.set_force_ms
  <type 'builtin_function_or_method'>	mp3.set_force_short_blocks
  <type 'builtin_function_or_method'>	mp3.set_free_format
  <type 'builtin_function_or_method'>	mp3.set_highpass_frequency
  <type 'builtin_function_or_method'>	mp3.set_highpass_width
  <type 'builtin_function_or_method'>	mp3.set_in_samplerate
  <type 'builtin_function_or_method'>	mp3.set_inter_channel_ratio
  <type 'builtin_function_or_method'>	mp3.set_lowpass_frequency
  <type 'builtin_function_or_method'>	mp3.set_lowpass_width
  <type 'builtin_function_or_method'>	mp3.set_mode
  <type 'builtin_function_or_method'>	mp3.set_mode_automs
  <type 'builtin_function_or_method'>	mp3.set_no_short_blocks
  <type 'builtin_function_or_method'>	mp3.set_num_channels
  <type 'builtin_function_or_method'>	mp3.set_num_samples
  <type 'builtin_function_or_method'>	mp3.set_original
  <type 'builtin_function_or_method'>	mp3.set_out_samplerate
  <type 'builtin_function_or_method'>	mp3.set_padding_type
  <type 'builtin_function_or_method'>	mp3.set_predictability_limit
  <type 'builtin_function_or_method'>	mp3.set_preset
  <type 'builtin_function_or_method'>	mp3.set_quality
  <type 'builtin_function_or_method'>	mp3.set_scale
  <type 'builtin_function_or_method'>	mp3.set_scale_left
  <type 'builtin_function_or_method'>	mp3.set_scale_right
  <type 'builtin_function_or_method'>	mp3.set_strict_iso
  <type 'builtin_function_or_method'>	mp3.set_substep
  <type 'builtin_function_or_method'>	mp3.set_use_temporal_masking
  <type 'builtin_function_or_method'>	mp3.set_vbr
  <type 'builtin_function_or_method'>	mp3.set_vbr_max_bitrate
  <type 'builtin_function_or_method'>	mp3.set_vbr_min_bitrate
  <type 'builtin_function_or_method'>	mp3.set_vbr_min_enforce
  <type 'builtin_function_or_method'>	mp3.set_vbr_quality
  <type 'builtin_function_or_method'>	mp3.set_write_vbr_tag
  <type 'builtin_function_or_method'>	mp3.write_tags

API description:
Help on module lame:

NAME
    lame - Python modul for the LAME encoding routines.

FILE
    /big/home/netchild/work/src/lame/py-lame/lamemodule.so

FUNCTIONS
    init(...)
        Initialize an mp3 encoder object
    
    url(...)
        Returns the URL for the LAME website.
    
    version(...)
        Returns the used version of LAME: (major, minor, alpha, beta, psy_major, psy_minor, psy_alpha, psy_beta, compile_time_features)

DATA
    ASM_3DNOW = 2
    ASM_MMX = 1
    ASM_SSE = 3
    DUAL = 2
    JOINT_STEREO = 1
    MONO = 3
    PAD_ADJUST = 2
    PAD_ALL = 1
    PAD_NO = 0
    PRESET_EXTREME = 1002
    PRESET_EXTREME_FAST = 1005
    PRESET_INSANE = 1003
    PRESET_MEDIUM = 1006
    PRESET_MEDIUM_FAST = 1007
    PRESET_R3MIX = 1000
    PRESET_STANDARD = 1001
    PRESET_STANDARD_FAST = 1004
    STEREO = 0
    VBR_ABR = 3
    VBR_DEFAULT = 4
    VBR_NEW = 4
    VBR_OFF = 0
    VBR_OLD = 2
    __file__ = './lamemodule.so'
    __name__ = 'lame'
    error = 'lame.error'


mp3.delete(...)
Delete a MP3 encoder object.
No parameters.
C function: lame_close()


mp3.encode(...)
Not implemented.

mp3.encode_interleaved(...)
Encode interleaved audio data (2 channels, 16 bit per sample).
Parameter: audiodata
C function: lame_encode_buffer_interleaved()


mp3.flush_buffers(...)
Encode remaining samples and flush the MP3 buffer.
No parameters.
C function: lame_encode_flush()


mp3.get_bitrate_histogram(...)
Get tuple of histogram dictionaries with bitrate/value keys.
C functions: lame_bitrate_kbps(), lame_bitrate_hist()


mp3.get_bitrate_stereo_mode_histogram(...)
Get tuple of dictionaries for stereo mode histogram with LR/LR-I/MS/MS-I keys.
C function: lame_bitrate_stereo_mode_hist()


mp3.get_bitrate_values(...)
Get tuple of possible bitrates.
C function: lame_bitrate_kbps()


mp3.get_frame_num(...)
Get number of encoded frames so far.
C function: lame_get_frameNum()

mp3.get_stereo_mode_histogram(...)
Get dictionary for stereo mode histogram with LR/LR-I/MS/MS-I keys.
C function: lame_stereo_mode_hist()


mp3.get_total_frames(...)
Get estimate of the total number of frames to be encoded, only valid if
the calling program set num_samples.
C function: lame_get_totalframes()


mp3.init_parameters(...)
Initializates the internal state of LAME.
No paramteres. First you have to use the set_*() functions.
C function: lame_init_params()


mp3.set_abr_bitrate(...)
Set ABR bitrate.
Default: 128
Parameter: int
C function: lame_set_VBR_mean_bitrate_kbps()


mp3.set_allow_blocktype_difference(...)
Allow blocktypes to differ between channels.
Default: 0 (disabled) for JOINT_STEREO, 1 (enabled) for STEREO
Parameter: int
C function: lame_set_allow_diff_short()


mp3.set_analysis(...)
Collect data for an MP3 frame analyzer.
Default: 0 (disabled)
Parameter: int
C function: lame_set_analysis


mp3.set_asm_optimizations(...)
Disable specific asm optimizations (if compiled in).
Paramters: lame.ASM_MMX, lame.ASM_3DNOW, lame.ASM_SSE;
           int (0 = disable)
C function: lame_set_asm_optimizations()


mp3.set_ath_disable(...)
Disable ATH.
Default: 0 (use ATH)
Parameter: int
C function: lame_set_noATH()


mp3.set_ath_for_masking_only(...)
Only use ATH for masking.
Default: 0 (disabled)
Parameter: int
C function: lame_set_ATHonly()


mp3.set_ath_for_short_only(...)
Only use ATH for short blocks.
Default: 0 (disabled)
Parameter: int
C function: lame_set_ATHshort()


mp3.set_ath_lower(...)
Lower ATH by this many dB.
Default: 0
Parameter: int
C function: lame_set_ATHlower()


mp3.set_ath_type(...)
Select type of ATH.
Default: XXX
Parameter: int  XXX should be lame.YYY
C function: lame_set_ATHtype()


mp3.set_athaa_loudness_approximation(...)
Choose the loudness approximation used by the ATH adaptive auto leveling.
Default: XXX
Parameter: int  XXX should be lame.YYY
C function: lame_set_athaa_loudapprox()


mp3.set_athaa_sensitivity(...)
Adjust the point below which adaptive ATH level adjustment occurs (in dB).
Default: 0
Parameter: int
C function: lame_set_athaa_sensitivity()


mp3.set_athaa_type(...)
Select type of ATH adaptive adjustment.
Default: XXX
Parameter: int  XXX should be lame.YYY
C function: lame_set_athaa_type()


mp3.set_bitrate(...)
Set bitrate.
Default: 128
Paramter: int
C function: lame_set_brate()


mp3.set_compression_ratio(...)
Set compression ratio.
Default: 11.0
Paramter: float
C function: lame_set_compression_ratio()


mp3.set_copyright(...)
Set copyright bit.
Default: 0 (disabled)
Parameter: int
C function: lame_set_copyright()


mp3.set_disable_reservoir(...)
Disable the bit reservoir (purpose: for testing only).
Default: 0 (disabled)
Parameter: int
C function: lame_set_disable_reservoir()


mp3.set_error_protection(...)
Add error protection (uses 2 bytes from each frame for CRC).
Default: 0 (disabled)
Parameter: int
C function: lame_set_error_protection()


mp3.set_exp_msfix(...)
Undocumented, don't use.
Parameter: double
C function: lame_set_msfix()


mp3.set_exp_nspsytune(...)
Use Naoki's psycho acoustic model instead of GPSYCHO (experimental!).
Default: 0 (disabled)
Parameter: int
C function: lame_set_exp_nspsytune()


mp3.set_exp_preset_expopts(...)
Undocumented, don't use.
Parameter: int
C function: lame_set_preset_expopts()


mp3.set_exp_quantization(...)
Select a different 'best quantization' function (experimental!).
Default: 0
Parameter: int
C function: lame_set_experimentalX()


mp3.set_exp_y(...)
Experimental option.
Default: 0 (disabled)
Parameter: int
C function: lame_set_experimentalY()


mp3.set_exp_z(...)
Experimantal option.
Default: 0 (disabled)
Parameter: int
C function: lame_set_experimentalZ()


mp3.set_extension(...)
Set extension bit (meaningless).
Default: 0 (disabled)
Parameter: int
C function: lame_set_extension()


mp3.set_force_ms(...)
Force M/S for all frames (purpose: for testing only).
Default: 0 (disabled)
Parameter: int
C function: lame_set_force_ms()


mp3.set_force_short_blocks(...)
Force the use of short blocks.
Default: 0 (disabled)
Parameter: int
C function: lame_set_force_short_blocks()


mp3.set_free_format(...)
Use free format.
Default: 0 (disabled)
Parameter: int
C function: lame_set_free_format()


mp3.set_highpass_frequency(...)
Highpass frequency in Hz (-1: disabled).
Default: 0 (LAME chooses)
Parameter: int
C function: lame_set_highpassfreq()


mp3.set_highpass_width(...)
Set width of highpass in Hz.
Default: one polyphase filter band
Parameter: int
C function: lame_set_highpasswidth()


mp3.set_in_samplerate(...)
Set samplerate of infile (in Hz).
Default: 44100
Parameter: int
C function: lame_set_in_samplerate()


mp3.set_inter_channel_ratio(...)
Set inter channel ratio.
Default: XXX
Parameter: float
C function: lame_set_interChRatio()


mp3.set_lowpass_frequency(...)
Lowpass frequency in Hz (-1: disabled).
Default: 0 (LAME chooses)
Parameter: int
C function: lame_set_lowpassfreq()


mp3.set_lowpass_width(...)
Width of transition band in Hz.
Default: one polyphase filter band
Parameter: int
C function: lame_set_lowpasswidth()


mp3.set_mode(...)
Set mode.
Default: let LAME choose
Parameter: lame.STEREO, lame.JOINT_STEREO, lame.DUAL, lame.MONO
C function: lame_set_mode


mp3.set_mode_automs(...)
Use a M/S mode with a switching threshold based on compression ratio.
Default: 0 (disabled)
Parameter: int
C function: lame_set_mode_automs()


mp3.set_no_short_blocks(...)
Disable the use of short blocks.
Default: 0 (use short blocks)
Parameter: int
C function: lame_set_no_short_blocks()


mp3.set_num_channels(...)
Set number of channels of infile.
Default: 2
Parameter: int
C function: lame_set_num_channels()


mp3.set_num_samples(...)
Set the number of samples.
Default: 2^32-1
Parameter: int
C function: lame_set_num_samples()


mp3.set_original(...)
Set original bit.
Default: 1 (enabled)
Parameter: int
C function: lame_set_original()


mp3.set_out_samplerate(...)
Set output samplerate (in Hz).
Default: 0 (let LAME choose one)
Parameter: int
C function: lame_set_out_samplerate()


mp3.set_padding_type(...)
Set padding type.
Default: lame.PAD_ADJUST
Paramter: lame.PAD_NO, lame.PAD_ALL, lame.PAD_ADJUST
C function: lame_set_padding_type()


mp3.set_predictability_limit(...)
Predictability limit for the ISO tonality formula.
Default: XXX
Parameter: int
C function: lame_set_cwlimit()


mp3.set_preset(...)
Set a buildin preset.
Paramter: int (bitrate) or lame.PRESET_R3MIX, lame.PRESET_STANDARD,
          lame.PRESET_STANDARD_FAST, lame.PRESET_EXTREME,
          lame.PRESET_EXTREME_FAST, lame.PRESET_INSANE,
          lame.PRESET_MEDIUM, lame.PRESET_MEDIUM_FAST
C function: lame_set_preset()


mp3.set_quality(...)
Choose quality.
Range: 0 (best) - 9 (worst)
Parameter: int
C function: lame_set_quality()


mp3.set_scale(...)
Scale the input by this amount before encoding.
Default: 0 (disabled)
Parameter: float
C function: lame_set_scale()


mp3.set_scale_left(...)
Scale channel 0 (left) of the input by this amount before encoding.
Default: 0 (disabled)
Parameter: float
C function: lame_set_scale_left()


mp3.set_scale_right(...)
Scale channel 1 (right) of the input by this amount before encoding.
Default: 0 (disabled)
Parameter: float
C function: lame_set_scale_right()


mp3.set_strict_iso(...)
Enforce strict ISO compliance.
Default: 0 (disabled)
Parameter: int
C function: lame_set_strict_ISO()


mp3.set_substep(...)
Set substep shaping method.
Default: XXX
Parameter: int  XXX should be lame.YYY
C function: lame_set_substep()


mp3.set_use_temporal_masking(...)
Use temporal masking.
Default: 1 (enabled)
Parameter: int
C function: lame_set_useTemporal()


mp3.set_vbr(...)
Set VBR mode.
Default: lame.VBR_OFF (disabled)
Parameter: lame.VBR_OFF, lame.VBR_OLD, lame.VBR_ABR, lame.VBR_NEW,
           lame.VBR_DEFAULT
C function: lame_set_VBR()


mp3.set_vbr_max_bitrate(...)
Set maximal bitrate for ABR/VBR.
Default: highest possible bitrate
Parameter: int
C function: lame_set_VBR_max_bitrate_kbps()


mp3.set_vbr_min_bitrate(...)
Set minimal bitrate for ABR/VBR.
Default: lowest possible bitrate
Parameter: int
C function: lame_set_VBR_min_bitrate_kbps()


mp3.set_vbr_min_enforce(...)
Enforce minimum bitrate for ABR/VBR, normally it will be violated for
analog silence.
Default: 0 (disabled)
Parameter: int
C function: lame_set_VBR_hard_min()


mp3.set_vbr_quality(...)
Set VBR quality level.
Default: 4
Parameter: 0 (highest) - 9 (lowest)
C function: lame_set_VBR_q()


mp3.set_write_vbr_tag(...)
Write a Xing VBR header frame.
Default: 0 (CBR) / 1 (VBR/ABR)
Paramter: int
C function: lame_set_bWriteVbrTag()


mp3.write_tags(...)
Write ID3v1 TAG's.
Parameter: file
C function: lame_mp3_tags_fid()


